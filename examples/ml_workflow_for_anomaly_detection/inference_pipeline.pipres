{'created_at': datetime.datetime(2025, 1, 26, 14, 46, 53, tzinfo=tzlocal()),
 'description': None,
 'display_name': 'anomaly-detection-inference 2025-01-26 14-46-53',
 'error': None,
 'experiment_id': 'c6d38288-2d92-42c9-a772-92983a400d88',
 'finished_at': datetime.datetime(2025, 1, 26, 14, 49, 54, tzinfo=tzlocal()),
 'pipeline_spec': {'components': {'comp-model-serving': {'executorLabel': 'exec-model-serving',
                                                         'inputDefinitions': {'parameters': {'metric_name': {'parameterType': 'STRING'},
                                                                                             'model_version': {'parameterType': 'STRING'},
                                                                                             'namespace': {'defaultValue': 'default',
                                                                                                           'isOptional': True,
                                                                                                           'parameterType': 'STRING'}}}}},
                   'deploymentSpec': {'executors': {'exec-model-serving': {'container': {'args': ['--executor_input',
                                                                                                  '{{$}}',
                                                                                                  '--function_to_execute',
                                                                                                  'model_serving'],
                                                                                         'command': ['sh',
                                                                                                     '-c',
                                                                                                     '\n'
                                                                                                     'if '
                                                                                                     '! '
                                                                                                     '[ '
                                                                                                     '-x '
                                                                                                     '"$(command '
                                                                                                     '-v '
                                                                                                     'pip)" '
                                                                                                     ']; '
                                                                                                     'then\n'
                                                                                                     '    '
                                                                                                     'python3 '
                                                                                                     '-m '
                                                                                                     'ensurepip '
                                                                                                     '|| '
                                                                                                     'python3 '
                                                                                                     '-m '
                                                                                                     'ensurepip '
                                                                                                     '--user '
                                                                                                     '|| '
                                                                                                     'apt-get '
                                                                                                     'install '
                                                                                                     'python3-pip\n'
                                                                                                     'fi\n'
                                                                                                     '\n'
                                                                                                     'PIP_DISABLE_PIP_VERSION_CHECK=1 '
                                                                                                     'python3 '
                                                                                                     '-m '
                                                                                                     'pip '
                                                                                                     'install '
                                                                                                     '--quiet '
                                                                                                     '--no-warn-script-location '
                                                                                                     "'kfp==2.11.0' "
                                                                                                     "'--no-deps' "
                                                                                                     "'typing-extensions>=3.7.4,<5; "
                                                                                                     'python_version<"3.9"\'  '
                                                                                                     '&&  '
                                                                                                     'python3 '
                                                                                                     '-m '
                                                                                                     'pip '
                                                                                                     'install '
                                                                                                     '--quiet '
                                                                                                     '--no-warn-script-location '
                                                                                                     "'model-registry==0.2.10' "
                                                                                                     "'kserve==0.13' "
                                                                                                     '&& '
                                                                                                     '"$0" '
                                                                                                     '"$@"\n',
                                                                                                     'sh',
                                                                                                     '-ec',
                                                                                                     'program_path=$(mktemp '
                                                                                                     '-d)\n'
                                                                                                     '\n'
                                                                                                     'printf '
                                                                                                     '"%s" '
                                                                                                     '"$0" '
                                                                                                     '> '
                                                                                                     '"$program_path/ephemeral_component.py"\n'
                                                                                                     '_KFP_RUNTIME=true '
                                                                                                     'python3 '
                                                                                                     '-m '
                                                                                                     'kfp.dsl.executor_main                         '
                                                                                                     '--component_module_path                         '
                                                                                                     '"$program_path/ephemeral_component.py"                         '
                                                                                                     '"$@"\n',
                                                                                                     '\n'
                                                                                                     'import '
                                                                                                     'kfp\n'
                                                                                                     'from '
                                                                                                     'kfp '
                                                                                                     'import '
                                                                                                     'dsl\n'
                                                                                                     'from '
                                                                                                     'kfp.dsl '
                                                                                                     'import '
                                                                                                     '*\n'
                                                                                                     'from '
                                                                                                     'typing '
                                                                                                     'import '
                                                                                                     '*\n'
                                                                                                     '\n'
                                                                                                     'def '
                                                                                                     'model_serving(\n'
                                                                                                     '    '
                                                                                                     'model_version: '
                                                                                                     'str,\n'
                                                                                                     '    '
                                                                                                     'metric_name: '
                                                                                                     'str,\n'
                                                                                                     '    '
                                                                                                     'namespace: '
                                                                                                     'str '
                                                                                                     '= '
                                                                                                     '"default",\n'
                                                                                                     '):\n'
                                                                                                     '    '
                                                                                                     'from '
                                                                                                     'kubernetes '
                                                                                                     'import '
                                                                                                     'client\n'
                                                                                                     '    '
                                                                                                     'import '
                                                                                                     'kserve\n'
                                                                                                     '    '
                                                                                                     'from '
                                                                                                     'model_registry '
                                                                                                     'import '
                                                                                                     'ModelRegistry\n'
                                                                                                     '\n'
                                                                                                     '    '
                                                                                                     'registry '
                                                                                                     '= '
                                                                                                     'ModelRegistry(\n'
                                                                                                     '        '
                                                                                                     'server_address="http://model-registry-service.kubeflow.svc.cluster.local",\n'
                                                                                                     '        '
                                                                                                     'port=8080,\n'
                                                                                                     '        '
                                                                                                     'author="Cassa",\n'
                                                                                                     '        '
                                                                                                     'is_secure=False\n'
                                                                                                     '    '
                                                                                                     ')\n'
                                                                                                     '\n'
                                                                                                     '    '
                                                                                                     'best_metric_value '
                                                                                                     '= '
                                                                                                     '0 '
                                                                                                     '# '
                                                                                                     'The '
                                                                                                     'metric '
                                                                                                     'should '
                                                                                                     'be '
                                                                                                     'ascending \n'
                                                                                                     '    '
                                                                                                     'for '
                                                                                                     'curr_model '
                                                                                                     'in '
                                                                                                     'registry.get_registered_models():\n'
                                                                                                     '        '
                                                                                                     'curr_version '
                                                                                                     '= '
                                                                                                     'registry.get_model_version(curr_model.name, '
                                                                                                     'model_version)\n'
                                                                                                     '        '
                                                                                                     'curr_metric '
                                                                                                     '= '
                                                                                                     'curr_version.custom_properties.get(metric_name, '
                                                                                                     "'0')\n"
                                                                                                     '        '
                                                                                                     'if '
                                                                                                     'curr_metric '
                                                                                                     '>= '
                                                                                                     'best_metric_value:\n'
                                                                                                     '            '
                                                                                                     'model_name '
                                                                                                     '= '
                                                                                                     'curr_model.name\n'
                                                                                                     '            '
                                                                                                     'model '
                                                                                                     '= '
                                                                                                     'curr_model\n'
                                                                                                     '            '
                                                                                                     'version '
                                                                                                     '= '
                                                                                                     'curr_version \n'
                                                                                                     '        '
                                                                                                     'print(f"{model.name} '
                                                                                                     'has '
                                                                                                     '{metric_name} '
                                                                                                     'of '
                                                                                                     ': '
                                                                                                     '{curr_metric}")\n'
                                                                                                     '\n'
                                                                                                     '    '
                                                                                                     'print("Registered '
                                                                                                     'Model:", '
                                                                                                     'model, '
                                                                                                     '"with '
                                                                                                     'ID", '
                                                                                                     'model.id)\n'
                                                                                                     '    '
                                                                                                     'print("Model '
                                                                                                     'Version:", '
                                                                                                     'version, '
                                                                                                     '"with '
                                                                                                     'ID", '
                                                                                                     'version.id)\n'
                                                                                                     '    '
                                                                                                     'art '
                                                                                                     '= '
                                                                                                     'registry.get_model_artifact(model_name, '
                                                                                                     'model_version)\n'
                                                                                                     '    '
                                                                                                     'print("Model '
                                                                                                     'Artifact:", '
                                                                                                     'art, '
                                                                                                     '"with '
                                                                                                     'ID", '
                                                                                                     'art.id)\n'
                                                                                                     '\n'
                                                                                                     '    '
                                                                                                     'isvc '
                                                                                                     '= '
                                                                                                     'kserve.V1beta1InferenceService(\n'
                                                                                                     '        '
                                                                                                     'api_version=kserve.constants.KSERVE_GROUP '
                                                                                                     '+ '
                                                                                                     '"/v1beta1",\n'
                                                                                                     '        '
                                                                                                     'kind=kserve.constants.KSERVE_KIND,\n'
                                                                                                     '        '
                                                                                                     'metadata=client.V1ObjectMeta(\n'
                                                                                                     '            '
                                                                                                     'name=model_name.lower().replace("_", '
                                                                                                     '"-"),\n'
                                                                                                     '            '
                                                                                                     'namespace=namespace,\n'
                                                                                                     '            '
                                                                                                     'labels={\n'
                                                                                                     '                '
                                                                                                     '"modelregistry/registered-model-id": '
                                                                                                     'model.id,\n'
                                                                                                     '                '
                                                                                                     '"modelregistry/model-version-id": '
                                                                                                     'version.id,\n'
                                                                                                     '            '
                                                                                                     '},\n'
                                                                                                     '        '
                                                                                                     '),\n'
                                                                                                     '        '
                                                                                                     'spec=kserve.V1beta1InferenceServiceSpec(\n'
                                                                                                     '            '
                                                                                                     'predictor=kserve.V1beta1PredictorSpec(\n'
                                                                                                     '                '
                                                                                                     'model=kserve.V1beta1ModelSpec(\n'
                                                                                                     '                    '
                                                                                                     '# '
                                                                                                     'storage_uri=f"model-registry://{model_name}/{model_version}", \n'
                                                                                                     '                    '
                                                                                                     'storage_uri=art.uri,\n'
                                                                                                     '                    '
                                                                                                     'model_format=kserve.V1beta1ModelFormat(\n'
                                                                                                     '                        '
                                                                                                     'name=art.model_format_name, '
                                                                                                     'version=art.model_format_version\n'
                                                                                                     '                    '
                                                                                                     '),\n'
                                                                                                     '                '
                                                                                                     ')\n'
                                                                                                     '            '
                                                                                                     ')\n'
                                                                                                     '        '
                                                                                                     '),\n'
                                                                                                     '    '
                                                                                                     ')\n'
                                                                                                     '    '
                                                                                                     'ks_client '
                                                                                                     '= '
                                                                                                     'kserve.KServeClient()\n'
                                                                                                     '    '
                                                                                                     'ks_client.create(isvc)\n'
                                                                                                     '\n'],
                                                                                         'image': 'python:3.9'}}}},
                   'pipelineInfo': {'name': 'anomaly-detection-inference'},
                   'root': {'dag': {'tasks': {'model-serving': {'cachingOptions': {'enableCache': True},
                                                                'componentRef': {'name': 'comp-model-serving'},
                                                                'inputs': {'parameters': {'metric_name': {'componentInputParameter': 'performance_metric'},
                                                                                          'model_version': {'componentInputParameter': 'model_version'},
                                                                                          'namespace': {'runtimeValue': {'constant': 'kubeflow-user-example-com'}}}},
                                                                'taskInfo': {'name': 'model-serving'}}}},
                            'inputDefinitions': {'parameters': {'model_version': {'parameterType': 'STRING'},
                                                                'performance_metric': {'defaultValue': 'roc_auc_score',
                                                                                       'isOptional': True,
                                                                                       'parameterType': 'STRING'}}}},
                   'schemaVersion': '2.1.0',
                   'sdkVersion': 'kfp-2.11.0'},
 'pipeline_version_id': None,
 'pipeline_version_reference': None,
 'recurring_run_id': None,
 'run_details': {'pipeline_context_id': None,
                 'pipeline_run_context_id': None,
                 'task_details': [{'child_tasks': [{'pod_name': 'anomaly-detection-inference-mnmzx-1852345002',
                                                    'task_id': None}],
                                   'create_time': datetime.datetime(2025, 1, 26, 14, 46, 53, tzinfo=tzlocal()),
                                   'display_name': 'root',
                                   'end_time': datetime.datetime(2025, 1, 26, 14, 49, 54, tzinfo=tzlocal()),
                                   'error': None,
                                   'execution_id': None,
                                   'executor_detail': None,
                                   'inputs': None,
                                   'outputs': None,
                                   'parent_task_id': None,
                                   'pod_name': None,
                                   'run_id': 'bcc3484e-ad17-48b2-a740-263e8629b6bd',
                                   'start_time': datetime.datetime(2025, 1, 26, 14, 47, 32, tzinfo=tzlocal()),
                                   'state': 'SUCCEEDED',
                                   'state_history': [{'error': None,
                                                      'state': 'RUNNING',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 47, 33, tzinfo=tzlocal())},
                                                     {'error': None,
                                                      'state': 'SUCCEEDED',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 49, 55, tzinfo=tzlocal())}],
                                   'task_id': '10f30da0-1865-4e1d-82a8-4433384619ce'},
                                  {'child_tasks': [{'pod_name': 'anomaly-detection-inference-mnmzx-1638955313',
                                                    'task_id': None}],
                                   'create_time': datetime.datetime(2025, 1, 26, 14, 46, 53, tzinfo=tzlocal()),
                                   'display_name': 'model-serving-driver',
                                   'end_time': datetime.datetime(2025, 1, 26, 14, 47, 47, tzinfo=tzlocal()),
                                   'error': None,
                                   'execution_id': None,
                                   'executor_detail': None,
                                   'inputs': None,
                                   'outputs': None,
                                   'parent_task_id': None,
                                   'pod_name': None,
                                   'run_id': 'bcc3484e-ad17-48b2-a740-263e8629b6bd',
                                   'start_time': datetime.datetime(2025, 1, 26, 14, 47, 32, tzinfo=tzlocal()),
                                   'state': 'SUCCEEDED',
                                   'state_history': [{'error': None,
                                                      'state': 'PENDING',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 47, 33, tzinfo=tzlocal())},
                                                     {'error': None,
                                                      'state': 'RUNNING',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 47, 43, tzinfo=tzlocal())},
                                                     {'error': None,
                                                      'state': 'SUCCEEDED',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 47, 58, tzinfo=tzlocal())}],
                                   'task_id': '261fa325-d2cd-48ab-ab8b-539836355f91'},
                                  {'child_tasks': [{'pod_name': 'anomaly-detection-inference-mnmzx-2890433412',
                                                    'task_id': None}],
                                   'create_time': datetime.datetime(2025, 1, 26, 14, 46, 53, tzinfo=tzlocal()),
                                   'display_name': 'model-serving',
                                   'end_time': datetime.datetime(2025, 1, 26, 14, 49, 54, tzinfo=tzlocal()),
                                   'error': None,
                                   'execution_id': None,
                                   'executor_detail': None,
                                   'inputs': None,
                                   'outputs': None,
                                   'parent_task_id': None,
                                   'pod_name': None,
                                   'run_id': 'bcc3484e-ad17-48b2-a740-263e8629b6bd',
                                   'start_time': datetime.datetime(2025, 1, 26, 14, 47, 57, tzinfo=tzlocal()),
                                   'state': 'SUCCEEDED',
                                   'state_history': [{'error': None,
                                                      'state': 'RUNNING',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 47, 58, tzinfo=tzlocal())},
                                                     {'error': None,
                                                      'state': 'SUCCEEDED',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 49, 55, tzinfo=tzlocal())}],
                                   'task_id': '7d260933-8c74-4bd9-a6e5-ecc3f52446f9'},
                                  {'child_tasks': None,
                                   'create_time': datetime.datetime(2025, 1, 26, 14, 48, 1, tzinfo=tzlocal()),
                                   'display_name': None,
                                   'end_time': datetime.datetime(2025, 1, 26, 14, 49, 43, tzinfo=tzlocal()),
                                   'error': None,
                                   'execution_id': '343',
                                   'executor_detail': None,
                                   'inputs': None,
                                   'outputs': None,
                                   'parent_task_id': None,
                                   'pod_name': None,
                                   'run_id': 'bcc3484e-ad17-48b2-a740-263e8629b6bd',
                                   'start_time': datetime.datetime(2025, 1, 26, 14, 48, 1, tzinfo=tzlocal()),
                                   'state': None,
                                   'state_history': None,
                                   'task_id': '8db120cf-e93c-4cd1-ad41-ad655c7ad206'},
                                  {'child_tasks': None,
                                   'create_time': datetime.datetime(2025, 1, 26, 14, 46, 53, tzinfo=tzlocal()),
                                   'display_name': 'executor',
                                   'end_time': datetime.datetime(2025, 1, 26, 14, 49, 44, tzinfo=tzlocal()),
                                   'error': None,
                                   'execution_id': None,
                                   'executor_detail': None,
                                   'inputs': None,
                                   'outputs': None,
                                   'parent_task_id': None,
                                   'pod_name': None,
                                   'run_id': 'bcc3484e-ad17-48b2-a740-263e8629b6bd',
                                   'start_time': datetime.datetime(2025, 1, 26, 14, 47, 57, tzinfo=tzlocal()),
                                   'state': 'SUCCEEDED',
                                   'state_history': [{'error': None,
                                                      'state': 'PENDING',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 47, 58, tzinfo=tzlocal())},
                                                     {'error': None,
                                                      'state': 'RUNNING',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 48, 8, tzinfo=tzlocal())},
                                                     {'error': None,
                                                      'state': 'SUCCEEDED',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 49, 55, tzinfo=tzlocal())}],
                                   'task_id': 'aeb29cfe-29ed-4284-b476-2ba6a06f277c'},
                                  {'child_tasks': [{'pod_name': 'anomaly-detection-inference-mnmzx-311534735',
                                                    'task_id': None}],
                                   'create_time': datetime.datetime(2025, 1, 26, 14, 46, 53, tzinfo=tzlocal()),
                                   'display_name': 'root-driver',
                                   'end_time': datetime.datetime(2025, 1, 26, 14, 47, 22, tzinfo=tzlocal()),
                                   'error': None,
                                   'execution_id': None,
                                   'executor_detail': None,
                                   'inputs': None,
                                   'outputs': None,
                                   'parent_task_id': None,
                                   'pod_name': None,
                                   'run_id': 'bcc3484e-ad17-48b2-a740-263e8629b6bd',
                                   'start_time': datetime.datetime(2025, 1, 26, 14, 46, 53, tzinfo=tzlocal()),
                                   'state': 'SUCCEEDED',
                                   'state_history': [{'error': None,
                                                      'state': 'PENDING',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 46, 54, tzinfo=tzlocal())},
                                                     {'error': None,
                                                      'state': 'RUNNING',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 47, 4, tzinfo=tzlocal())},
                                                     {'error': None,
                                                      'state': 'SUCCEEDED',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 47, 33, tzinfo=tzlocal())}],
                                   'task_id': 'c92612a1-2619-4677-ac8b-27eb6323dfa4'},
                                  {'child_tasks': [{'pod_name': 'anomaly-detection-inference-mnmzx-2086501048',
                                                    'task_id': None}],
                                   'create_time': datetime.datetime(2025, 1, 26, 14, 46, 53, tzinfo=tzlocal()),
                                   'display_name': 'anomaly-detection-inference-mnmzx',
                                   'end_time': datetime.datetime(2025, 1, 26, 14, 49, 54, tzinfo=tzlocal()),
                                   'error': None,
                                   'execution_id': None,
                                   'executor_detail': None,
                                   'inputs': None,
                                   'outputs': None,
                                   'parent_task_id': None,
                                   'pod_name': None,
                                   'run_id': 'bcc3484e-ad17-48b2-a740-263e8629b6bd',
                                   'start_time': datetime.datetime(2025, 1, 26, 14, 46, 53, tzinfo=tzlocal()),
                                   'state': 'SUCCEEDED',
                                   'state_history': [{'error': None,
                                                      'state': 'RUNNING',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 46, 54, tzinfo=tzlocal())},
                                                     {'error': None,
                                                      'state': 'SUCCEEDED',
                                                      'update_time': datetime.datetime(2025, 1, 26, 14, 49, 55, tzinfo=tzlocal())}],
                                   'task_id': 'e76108fd-db8f-4ee2-8c8c-6f43982974fb'}]},
 'run_id': 'bcc3484e-ad17-48b2-a740-263e8629b6bd',
 'runtime_config': {'parameters': {'model_version': 'v1.0.1',
                                   'performance_metric': 'roc_auc_score'},
                    'pipeline_root': None},
 'scheduled_at': datetime.datetime(2025, 1, 26, 14, 46, 53, tzinfo=tzlocal()),
 'service_account': 'default-editor',
 'state': 'SUCCEEDED',
 'state_history': [{'error': None,
                    'state': 'PENDING',
                    'update_time': datetime.datetime(2025, 1, 26, 14, 46, 53, tzinfo=tzlocal())},
                   {'error': None,
                    'state': 'RUNNING',
                    'update_time': datetime.datetime(2025, 1, 26, 14, 46, 54, tzinfo=tzlocal())},
                   {'error': None,
                    'state': 'SUCCEEDED',
                    'update_time': datetime.datetime(2025, 1, 26, 14, 49, 55, tzinfo=tzlocal())}],
 'storage_state': 'AVAILABLE'}